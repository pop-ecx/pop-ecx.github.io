<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pop-ecx</title><link>https://pop-ecx.github.io/</link><description>Recent content on pop-ecx</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pop-ecx.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Secure Development</title><link>https://pop-ecx.github.io/secure-development/</link><pubDate>Wed, 19 Mar 2025 09:39:27 +0300</pubDate><guid>https://pop-ecx.github.io/secure-development/</guid><description>In my previous post I talked about how you can use snyk in your editor as you code and even added snyk-ls as a must have. I had a bit of a tough time finding the correct configuration to achieve this using Neovim. Perhaps you are, right now, on the same path as myself last year. Luckily for you, I gotchu.
Before proceeding, make sure you have a snyk account and activate snyk code.</description></item><item><title>Nvim Dev</title><link>https://pop-ecx.github.io/nvim-dev/</link><pubDate>Mon, 17 Mar 2025 11:27:33 +0300</pubDate><guid>https://pop-ecx.github.io/nvim-dev/</guid><description>Here is a quick list of my Neovim setup for dev work. This includes plugins, LSPs and some handy keymaps.
Plugins Telescope - Fuzzy find files quickly. No need for filetree with this one. Harpoon - Mark frequently visited files and get to them blazingly fast. Mason - This helps in installing language servers. Make sure you have mason-lspconfig.nvim and nvim-lspconfig. nvim-cmp - For completions. Make sure to also get Luasnip, cmp_luasnip, friendly-snippets and nvim-cmp-lsp.</description></item><item><title>Clearfake</title><link>https://pop-ecx.github.io/clearfake/</link><pubDate>Mon, 03 Mar 2025 11:10:51 +0300</pubDate><guid>https://pop-ecx.github.io/clearfake/</guid><description>A few months ago, I had obtained, through a friend, a sample of clearfake malware that was wrecking havoc in one of his friend&amp;rsquo;s servers.
This post is about analysis I had done, it has been long overdue.
Below is a screenshot of the infection method it uses, a notification to update your browser by running some powershell.
I clicked copy and pasted it in Neovim. This is how it looked</description></item><item><title>Purplefox Analysis</title><link>https://pop-ecx.github.io/purplefox-analysis/</link><pubDate>Tue, 25 Feb 2025 11:03:11 +0300</pubDate><guid>https://pop-ecx.github.io/purplefox-analysis/</guid><description>Originally written Thu, Jun 15, 2023
A couple of months ago, I came across an intriguing .tmp file that was sent to me. The sender mentioned that their antivirus software had flagged and caught the file on their computer. Naturally, I decided to investigate further. Although the file was labeled as a .tmp file, running it through a file utility revealed that it was actually an MSI (Microsoft Software Installer) file.</description></item><item><title>About</title><link>https://pop-ecx.github.io/about/</link><pubDate>Mon, 24 Feb 2025 19:35:33 +0300</pubDate><guid>https://pop-ecx.github.io/about/</guid><description>Hey, I&amp;rsquo;m Ollieâ€”a cybersecurity pro and dev diving deep into Zig, Lua, and Neovim. I tinker with low-level programming, build custom tooling, and explore malware analysis.
This blog is where I share insights, experiments, and lessons learnedâ€”whether itâ€™s writing an LSP, reverse-engineering binaries, or customizing Neovim for cybersecurity workflows.
If youâ€™re into efficient code, security research, or just making tools work your way, youâ€™re in the right place.
ðŸ›  Languages &amp;amp; Tools: Zig, Lua, Python, YARA, Sigma, Neovim</description></item><item><title>Posts</title><link>https://pop-ecx.github.io/posts/</link><pubDate>Mon, 24 Feb 2025 13:15:42 +0300</pubDate><guid>https://pop-ecx.github.io/posts/</guid><description> Purplefox msi rootkit analysis Nvim for devs Secure development in nvim using snyk</description></item></channel></rss>